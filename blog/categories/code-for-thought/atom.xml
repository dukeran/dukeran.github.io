<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[ code-for-thought | TechReg]]></title>
  <link href="http://dukeran.github.io/blog/categories/code-for-thought/atom.xml" rel="self"/>
  <link href="http://dukeran.github.io/"/>
  <updated>2016-03-02T09:43:19-05:00</updated>
  <id>http://dukeran.github.io/</id>
  <author>
    <name><![CDATA[Kerrie Durham]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Boolean Values]]></title>
    <link href="http://dukeran.github.io/blog/2016/02/07/boolean-values/"/>
    <updated>2016-02-07T00:44:33-05:00</updated>
    <id>http://dukeran.github.io/blog/2016/02/07/boolean-values</id>
    <content type="html"><![CDATA[<h4>Fundamentals of Ones and Zeros</h4>

<p>Thanks to a friend of mine, I&rsquo;ve recently been doing a lot of Kata on <strong>Codewars</strong>. If you&rsquo;ve never done katas on Codewars before, I would <em>highly, highly, highly</em> reccomend it. It&rsquo;s a great site where your competitive nature can get the best of you as you compete with other friends for &lsquo;honor&rsquo;. There are eight levels of difficulty and each kata is a creative coding problem that you solve for honor points. The beginner&rsquo;s level, level 8, is a good overview of incredibly basic coding concepts. Once you enter your solution you are able to see how others solved the same kata.</p>

<p>&ndash;> <a href="http://www.codewars.com">http://www.codewars.com</a></p>

<p>My username is <strong>dukeran</strong> if you want to add me!</p>

<h5><em>special note: if the same solution was posted by more than two people then I will not site the code.</em></h5>

<p>After going through Chris Pine&rsquo;s <em>Learn to Program</em>  book, here is the solution I came up with:</p>

<pre><code class="ruby">    def boolean_to_string(b)
        if b == true 
    "true"
        else b == false
    "false"
  end
end
</code></pre>

<p>This is a straightforward code which works just fine but doesn&rsquo;t utilize the fundamental concept of Boolean values.</p>

<!--more-->


<p>It wasn&rsquo;t until I saw other answers and started doing some research that I learned more about it. It started when I saw the most popular answer and was instantly confused:</p>

<pre><code class="ruby ">def boolean_to_string(b)
  b ? "true" : "false"
end
</code></pre>

<p>At first I cocked my head and then wiped my glasses. First of all, what does the <code>?</code> mean? and why don&rsquo;t you have to specifically tell ruby that <code>if b = true...</code> How does ruby automatically know to test for true and false?</p>

<p>The program above may seem painfully simple to any programmer worth their salt but to a newbie in the field, it was a confusion fest - especially when it comes to Ruby. I find that as a Linguistics major with no background in coding, many expert programmers assume that these fundamentals are pure common sense. This is not the case for most non-programmers and I want to break everything down step by step.</p>

<p>-finish-</p>

<p>need to have a question mark to denote the boolean theory!!</p>
]]></content>
  </entry>
  
</feed>
